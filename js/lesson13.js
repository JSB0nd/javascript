// –û—Ç–ª–∞–¥–∫–∞ –∫–æ–¥–∞ üîß
// —Ç–æ—á–∫–∞ –æ—Å—Ç–∞–Ω–æ–≤–∞

function hasEvenNumber(arr) {

    let foundEven = false;

    for (let i = 0; i < arr.length; i++) {

        if (arr[i] % 2 === 0) {

            return foundEven = true;

            return; // –≤ –¥–∞–Ω–Ω–æ–º –º–µ—Å—Ç–µ –Ω–µ —Ö–≤–∞—Ç–∞–ª–æ return

        } else if (arr[i] % 2 !== 0) {

            foundEven = false;

        }

    }

    return;

}

console.log(hasEvenNumber([1, 3, 4, 5])); // –û–∂–∏–¥–∞–µ—Ç—Å—è: true

// true - –Ω–µ —Ö–≤–∞—Ç–∞–ª–æ –æ—Å—Ç–∞–Ω–æ–≤–∫–∏ —Ñ—É–Ω–∫—Ü–∏–∏ –ø—Ä–∏ —É—Å–ª–æ–≤–∏–∏ 2 === 0

// debugger

function calculateAverage(numbers) {

    debugger

    let sum = 0;

    debugger

    for (let i = 0; i < numbers.length; i++) { // –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å <

        sum += numbers[i];

        debugger

    }

    return sum / numbers.length;

}

console.log(calculateAverage([2, 4, 6])); // –û–∂–∏–¥–∞–µ—Ç—Å—è: 4

// 4 - –ø—Ä–æ–±–ª–µ–º–∞ –±—ã–ª–∞ –≤ —Ü–∏–∫–ª–µ

// console.log

function findLargestNumber(arr) {

    console.log('arr ' + arr);

    let largest = arr[0]; // –ø—Ä–æ–±–ª–µ–º–∞ –∑–¥–µ—Å—å, –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –ø–µ—Ä–≤–æ–µ —á–∏—Å–ª–æ –∫–∞–∫ –º–∞–∫—Å–∏–º—É–º –∏ –¥–≤–∏–≥–∞–µ–º –¥–∞–ª—å—à–µ

    console.log('largest ' + largest)

    for (let i = 0; i < arr.length; i++) {

        if (arr[i] > largest) {

            largest = arr[i];

            console.log('largest ' + largest);

        }

    }

    return largest;

}

console.log(findLargestNumber([-10, -20, -30])); // –û–∂–∏–¥–∞–µ—Ç—Å—è: -10

// -10