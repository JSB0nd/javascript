// –∏–≥—Ä–æ–∫
const player = {
    name: '',
    location: 'office',
    health: 100,
    strength: 10,
    defense: 5,
    awareness: 0,
    inventory: ['–ú–æ–±–∏–ª—å–Ω–∏–∫'],
    invitedToHideout: false
};

// –ª–æ–∫–∞—Ü–∏–∏
const locations = {
    office: {
        name: '–û—Ñ–∏—Å',
        description: '–¢—É—Å–∫–ª—ã–π —Å–≤–µ—Ç, —Å–µ—Ä—ã–µ —Å—Ç–µ–Ω—ã, –±–µ–∑–∂–∏–∑–Ω–µ–Ω–Ω—ã–π –º–æ–Ω–∏—Ç–æ—Ä. –°–æ—Ç—Ä—É–¥–Ω–∏–∫–∏ —Å–ª–æ–≤–Ω–æ –∫–ª–æ–Ω—ã. –ó–¥–µ—Å—å –≤—Å—ë –∫–∞–∂–µ—Ç—Å—è –ø–æ–≤—Ç–æ—Ä—è—é—â–∏–º—Å—è –∏ –º—ë—Ä—Ç–≤—ã–º.',
        actions: ['–ü—Ä–æ–≤–µ—Ä–∏—Ç—å –º–æ–Ω–∏—Ç–æ—Ä', '–û—Ç–∫—Ä—ã—Ç—å —è—â–∏–∫', '–í—ã–π—Ç–∏ –≤ –∫–æ—Ä–∏–¥–æ—Ä', '–û—Å–º–æ—Ç—Ä–µ—Ç—å—Å—è']
    },
    corridor: {
        name: '–ö–æ—Ä–∏–¥–æ—Ä',
        description: '–ë–µ—Å–∫–æ–Ω–µ—á–Ω—ã–π –∫–æ—Ä–∏–¥–æ—Ä —Å –æ–¥–∏–Ω–∞–∫–æ–≤—ã–º–∏ –¥–≤–µ—Ä—è–º–∏ –∏ –æ–¥–Ω–æ–æ–±—Ä–∞–∑–Ω—ã–º–∏ —à–∞–≥–∞–º–∏. –ö–∞–∂–µ—Ç—Å—è, —Ç—ã —É–∂–µ –±—ã–ª —Ç—É—Ç. –ò–ª–∏ —ç—Ç–æ –±—ã–ª–æ –≤—á–µ—Ä–∞? –ò–ª–∏ —á–∞—Å –Ω–∞–∑–∞–¥?',
        actions: ['–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –æ—Ñ–∏—Å', '–ü–æ–¥–Ω—è—Ç—å—Å—è –ø–æ –ª–µ—Å—Ç–Ω–∏—Ü–µ', '–û—Å–º–æ—Ç—Ä–µ—Ç—å—Å—è']
    },
    stairs: {
        name: '–õ–µ—Å—Ç–Ω–∏—Ü–∞',
        description: '–°—ã—Ä–∞—è, —Å–µ—Ä–∞—è –ª–µ—Å—Ç–Ω–∏—Ü–∞ –≤–µ–¥—ë—Ç –≤–Ω–∏–∑. –ù–∞ —Å—Ç–µ–Ω–∞—Ö –ø—è—Ç–Ω–∞ –ø–ª–µ—Å–µ–Ω–∏. –ö–æ—à–∫–∞ –ø—Ä–æ–±–µ–≥–∞–µ—Ç –º–∏–º–æ... –∏ —Å–Ω–æ–≤–∞.',
        actions: ['–°–ø—É—Å—Ç–∏—Ç—å—Å—è –≤ –º–µ—Ç—Ä–æ', '–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –∫–æ—Ä–∏–¥–æ—Ä', '–û—Å–º–æ—Ç—Ä–µ—Ç—å—Å—è']
    },
    metro: {
        name: '–ú–µ—Ç—Ä–æ',
        description: '–ü—É—Å—Ç–∞—è —Å—Ç–∞–Ω—Ü–∏—è, –º–∏–≥–∞—é—â–∏–π —ç–∫—Ä–∞–Ω –∏ –æ—â—É—â–µ–Ω–∏–µ, —á—Ç–æ —Ç—ã –Ω–µ –æ–¥–∏–Ω. –®—É–º –ø–æ–µ–∑–¥–æ–≤ –∑–≤—É—á–∏—Ç, —Ö–æ—Ç—è –∏—Ö –¥–∞–≤–Ω–æ –Ω–µ—Ç. –ú–∏—Ä –ø–æ–¥–≤–∏—Å.',
        actions: ['–û—Å–º–æ—Ç—Ä–µ—Ç—å —Ç–æ–Ω–Ω–µ–ª—å', '–í–µ—Ä–Ω—É—Ç—å—Å—è –Ω–∞ –ª–µ—Å—Ç–Ω–∏—Ü—É', '–û—Å–º–æ—Ç—Ä–µ—Ç—å—Å—è']
    },
    rooftop: {
        name: '–ö—Ä—ã—à–∞',
        description: '–°–µ—Ä–æ–µ –Ω–µ–±–æ. –ì–æ—Ä–æ–¥ –º—ë—Ä—Ç–≤. –ö–∞–∂–µ—Ç—Å—è, –∫—Ç–æ-—Ç–æ –Ω–∞–±–ª—é–¥–∞–µ—Ç —Å–≤–µ—Ä—Ö—É...',
        actions: ['–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –≤–Ω–∏–∑', '–í–µ—Ä–Ω—É—Ç—å—Å—è –Ω–∞ –ª–µ—Å—Ç–Ω–∏—Ü—É', '–û—Å–º–æ—Ç—Ä–µ—Ç—å—Å—è']
    },
    hideout: {
        name: '–°–∫—Ä—ã—Ç–∞—è –∑–æ–Ω–∞',
        description: '–¢—ã –≤ –±–µ–ª–æ–º –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–µ, –∫–∞–∫ –±—É–¥—Ç–æ –≤–Ω—É—Ç—Ä–∏ –∫–æ–¥–∞. –ú–æ—Ä—Ñ–µ—É—Å —Å—Ç–æ–∏—Ç —Å –¥–≤—É–º—è —Ç–∞–±–ª–µ—Ç–∫–∞–º–∏.',
        actions: ['–í–∑—è—Ç—å –∫—Ä–∞—Å–Ω—É—é —Ç–∞–±–ª–µ—Ç–∫—É', '–í–∑—è—Ç—å —Å–∏–Ω—é—é —Ç–∞–±–ª–µ—Ç–∫—É']
    },
};

// dom
const locationName = document.getElementById('location-name');
const locationText = document.getElementById('location-text');
const actionButtons = document.getElementById('action-buttons');
const startButton = document.getElementById('start-button');
const startScreen = document.getElementById('start-screen');
const gameInterface = document.getElementById('game-interface');
const characterName = document.getElementById('character-name');
const logPanel = document.getElementById('log-content');

// —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏
const statHealth = document.getElementById('stat-health');
const statStrength = document.getElementById('stat-strength');
const statDefense = document.getElementById('stat-defense');
const statAwareness = document.getElementById('stat-awareness');
const itemsList = document.getElementById('items');

// –∑–∞–ø—É—Å–∫
startButton.addEventListener('click', () => {
    const input = document.getElementById('player-name');
    const name = input.value.trim();
    if (!name) return;

    player.name = name;
    characterName.textContent = name;

    startScreen.classList.add('hidden');
    gameInterface.classList.remove('hidden');

    updateStats();
    updateInventory();
    updateLocation();
});

// –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫
function updateStats() {
    statHealth.textContent = player.health;
    statStrength.textContent = player.strength;
    statDefense.textContent = player.defense;
    statAwareness.textContent = player.awareness;
}

// –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∏–Ω–≤–µ–Ω—Ç–∞—Ä—è
function updateInventory() {
    itemsList.innerHTML = '';
    player.inventory.forEach(item => {
        const div = document.createElement('div');
        div.textContent = item;
        itemsList.appendChild(div);
    });
}

// –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –ª–æ–∫–∞—Ü–∏–∏
function updateLocation() {
    const current = locations[player.location];

    locationName.textContent = current.name;
    locationText.textContent = current.description;

    actionButtons.innerHTML = '';
    current.actions.forEach(action => {
        const btn = document.createElement('button');
        btn.textContent = action;
        btn.addEventListener('click', () => handleAction(action));
        actionButtons.appendChild(btn);
    });

    log(`–í—ã –ø–µ—Ä–µ—à–ª–∏ –≤ –ª–æ–∫–∞—Ü–∏—é: ${locations[player.location].name}`); // –¥–æ–±–∞–≤–ª—è–µ–º –≤ –ª–æ–≥ –ø–µ—Ä–µ—Ö–æ–¥
}

// –ª–æ–≥
function log(message) {
    const p = document.createElement('p');
    p.textContent = message;
    logPanel.appendChild(p);
    logPanel.scrollTop = logPanel.scrollHeight;
}

// –ø—Ä–æ–≤–µ—Ä–∫–∞ –æ—Å–æ–∑–Ω–∞–Ω–Ω–æ—Å—Ç–∏
function checkAwareness() {
    if (player.awareness >= 50 && !player.invitedToHideout) {
        player.invitedToHideout = true;
        log('üìû –ú–æ–±–∏–ª—å–Ω–∏–∫ –∑–≤–æ–Ω–∏—Ç... –≠—Ç–æ –ú–æ—Ä—Ñ–µ—É—Å.');
        log('–ú–æ—Ä—Ñ–µ—É—Å: ¬´–¢—ã —á—É–≤—Å—Ç–≤—É–µ—à—å —ç—Ç–æ, –¥–∞? –ü—Ä–∏—Ö–æ–¥–∏. –Ø –∂–¥—É —Ç–µ–±—è –≤ —Å–∫—Ä—ã—Ç–æ–π –∑–æ–Ω–µ.¬ª');
        
        // –æ—Ç–∫—Ä–æ–µ–º –Ω–æ–≤–æ–µ –¥–µ–π—Å—Ç–≤–∏–µ
        locations[player.location].actions.push('–ü–æ–π—Ç–∏ –≤ —Å–∫—Ä—ã—Ç—É—é –∑–æ–Ω—É');
    }
}

// –¥–µ–π—Å—Ç–≤–∏—è
function handleAction(action) {
    switch (action) {
        case '–ü—Ä–æ–≤–µ—Ä–∏—Ç—å –º–æ–Ω–∏—Ç–æ—Ä':
            log('–≠–∫—Ä–∞–Ω –º–µ—Ä—Ü–∞–µ—Ç –∑–µ–ª—ë–Ω—ã–º–∏ —Å–∏–º–≤–æ–ª–∞–º–∏. –≠—Ç–æ –Ω–µ –ø—Ä–æ—Å—Ç–æ —Ç–µ–∫—Å—Ç...');
            player.awareness += 5;
            updateStats();
            break;

        case '–û—Ç–∫—Ä—ã—Ç—å —è—â–∏–∫':
            if (!player.inventory.includes('–ü–∏—Å—Ç–æ–ª–µ—Ç')) {
                log('–í—ã –Ω–∞—à–ª–∏ –ø–∏—Å—Ç–æ–ª–µ—Ç! +5 –∫ —Å–∏–ª–µ');
                player.inventory.push('–ü–∏—Å—Ç–æ–ª–µ—Ç');
                player.strength += 5;
                updateStats();
                updateInventory();
            } else {
                log('–í —è—â–∏–∫–µ –ø—É—Å—Ç–æ.');
            }
            break;

        case '–í—ã–π—Ç–∏ –≤ –∫–æ—Ä–∏–¥–æ—Ä':
            player.location = 'corridor';
            updateLocation();
            break;

        case '–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –æ—Ñ–∏—Å':
            player.location = 'office';
            updateLocation();
            break;

        case '–ü–æ–¥–Ω—è—Ç—å—Å—è –ø–æ –ª–µ—Å—Ç–Ω–∏—Ü–µ':
            player.location = 'stairs';
            updateLocation();
            break;

        case '–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –∫–æ—Ä–∏–¥–æ—Ä':
            player.location = 'corridor';
            updateLocation();
            break;

        case '–°–ø—É—Å—Ç–∏—Ç—å—Å—è –≤ –º–µ—Ç—Ä–æ':
            player.location = 'metro';
            updateLocation();
            break;

        case '–í–µ—Ä–Ω—É—Ç—å—Å—è –Ω–∞ –ª–µ—Å—Ç–Ω–∏—Ü—É':
            player.location = 'stairs';
            updateLocation();
            break;

        case '–û—Å–º–æ—Ç—Ä–µ—Ç—å —Ç–æ–Ω–Ω–µ–ª—å':
            if (!player.inventory.includes('–ü—Ä–æ–ø—É—Å–∫')) {
                log('–í—ã –Ω–∞—à–ª–∏ –ü—Ä–æ–ø—É—Å–∫! +20 –∫ –æ—Å–æ–∑–Ω–∞–Ω–Ω–æ—Å—Ç–∏');
                player.inventory.push('–ü—Ä–æ–ø—É—Å–∫');
                player.awareness += 20;
                updateStats();
                checkAwareness();
                updateInventory();
            } else {
                log('–ü—Ä–æ–ø—É—Å–∫ —É–∂–µ —É –≤–∞—Å.');
            }
            break;

        case '–ü–æ–π–º–∞—Ç—å –≥–ª—é–∫ –≤ –æ—Ç—Ä–∞–∂–µ–Ω–∏–∏':
            log('–í–∞—à–µ –æ—Ç—Ä–∞–∂–µ–Ω–∏–µ –º–æ—Ä–≥–Ω—É–ª–æ, –Ω–æ –≤—ã –Ω–µ –º–æ—Ä–≥–∞–ª–∏. +5 –∫ –æ—Å–æ–∑–Ω–∞–Ω–Ω–æ—Å—Ç–∏');
            player.awareness += 5;
            updateStats();
            checkAwareness();
            break;

        case '–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –≤ –º–∏–≥–∞—é—â—É—é –ª–∞–º–ø—É':
            log('–°–≤–µ—Ç –º–∏–≥–∞–µ—Ç —Å —Ç–æ—á–Ω–æ—Å—Ç—å—é –¥–æ —Å–µ–∫—É–Ω–¥—ã. –≠—Ç–æ –Ω–µ —Å–ª—É—á–∞–π–Ω–æ—Å—Ç—å. +5 –∫ –æ—Å–æ–∑–Ω–∞–Ω–Ω–æ—Å—Ç–∏');
            player.awareness += 5;
            updateStats();
            checkAwareness();
            break;

        case '–í–≥–ª—è–¥–µ—Ç—å—Å—è –≤ –≥–ª—é–∫ –≤ –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–µ':
            log('–°—Ç—É–ø–µ–Ω–∏ –Ω–∞ —Å–µ–∫—É–Ω–¥—É –∏—Å—á–µ–∑–ª–∏, –∫–∞–∫ –±—É–¥—Ç–æ –≤—ã –Ω–∞—Ö–æ–¥–∏—Ç–µ—Å—å –≤ –ø—É—Å—Ç–æ—Ç–µ. +5 –∫ –æ—Å–æ–∑–Ω–∞–Ω–Ω–æ—Å—Ç–∏');
            player.awareness += 5;
            checkAwareness();
            updateStats();
            break;

        case '–ó–∞–º–µ—Ä–µ—Ç—å –∏ —Å–ª—É—à–∞—Ç—å —à—É–º':
            log('–í—ã —Å–ª—ã—à–∏—Ç–µ —Å—Ç—Ä–∞–Ω–Ω—ã–µ —Ü–∏—Ñ—Ä—ã —Å–∫–≤–æ–∑—å —à—É–º. –ú–∏—Ä —Å–ª–æ–º–∞–Ω. +5 –∫ –æ—Å–æ–∑–Ω–∞–Ω–Ω–æ—Å—Ç–∏');
            player.awareness += 5;
            checkAwareness();
            updateStats();
            break;

        case '–û—Å–º–æ—Ç—Ä–µ—Ç—å—Å—è':
            if (player.awareness >= 50 && !player.invitedToHideout) {
                player.invitedToHideout = true;
                log('üìû –ú–æ–±–∏–ª—å–Ω–∏–∫ –∑–≤–æ–Ω–∏—Ç... –≠—Ç–æ –ú–æ—Ä—Ñ–µ—É—Å.');
                log('–ú–æ—Ä—Ñ–µ—É—Å: ¬´–¢—ã —á—É–≤—Å—Ç–≤—É–µ—à—å —ç—Ç–æ, –¥–∞? –ü—Ä–∏—Ö–æ–¥–∏. –Ø –∂–¥—É —Ç–µ–±—è –≤ —Å–∫—Ä—ã—Ç–æ–π –∑–æ–Ω–µ.¬ª');
                const current = locations[player.location];
                current.actions.push('–ü–æ–π—Ç–∏ –≤ —Å–∫—Ä—ã—Ç—É—é –∑–æ–Ω—É');
                updateLocation(); // —á—Ç–æ–±—ã –æ—Ç–æ–±—Ä–∞–∑–∏–ª–∞—Å—å –Ω–æ–≤–∞—è –∫–Ω–æ–ø–∫–∞
            } else {
                log('–¢—ã —á—É–≤—Å—Ç–≤—É–µ—à—å, —á—Ç–æ —á—Ç–æ-—Ç–æ –Ω–µ —Ç–∞–∫... –Ω–æ –ø–æ–∫–∞ –Ω–µ—è—Å–Ω–æ —á—Ç–æ.');
            }
            break;

        case '–ü–æ–π—Ç–∏ –≤ —Å–∫—Ä—ã—Ç—É—é –∑–æ–Ω—É':
            player.location = 'hideout';
            updateLocation();
            break;

        case '–í–∑—è—Ç—å –∫—Ä–∞—Å–Ω—É—é —Ç–∞–±–ª–µ—Ç–∫—É':
            log('–¢—ã –≤—ã–±—Ä–∞–ª –∏—Å—Ç–∏–Ω—É. –ü—Ä–æ–±—É–∂–¥–µ–Ω–∏–µ –Ω–∞—á–∞–ª–æ—Å—å.');
            endGame('–¢—ã –ø—Ä–æ—Å–Ω—É–ª—Å—è. –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ —Ä–µ–∞–ª—å–Ω–æ—Å—Ç—å.');
            break;

        case '–í–∑—è—Ç—å —Å–∏–Ω—é—é —Ç–∞–±–ª–µ—Ç–∫—É':
            log('–¢—ã –≤—ã–±—Ä–∞–ª –∑–∞–±—ã—Ç—å –≤—Å—ë. –ú–∞—Ç—Ä–∏—Ü–∞ –æ–±–Ω–∏–º–∞–µ—Ç —Ç–µ–±—è –≤–Ω–æ–≤—å.');
            endGame('–¢—ã –∑–∞—Å–Ω—É–ª. –í—Å—ë –±—ã–ª–æ —Å–Ω–æ–º. –ò–ª–∏ –Ω–µ—Ç?');
            break;

        case '–ü–æ–¥–Ω—è—Ç—å—Å—è –Ω–∞ –∫—Ä—ã—à—É':
            player.location = 'rooftop';
            updateLocation();
            break;

        case '–í–µ—Ä–Ω—É—Ç—å—Å—è –Ω–∞ –ª–µ—Å—Ç–Ω–∏—Ü—É':
            player.location = 'stairs';
            updateLocation();
            break;

        case '–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –≤–Ω–∏–∑':
            log('–¢—ã –æ—â—É—â–∞–µ—à—å –≤—ã—Å–æ—Ç—É... –∏ –Ω–µ—Ä–µ–∞–ª—å–Ω–æ—Å—Ç—å –≤—Å–µ–≥–æ –≤–æ–∫—Ä—É–≥. +5 –∫ –æ—Å–æ–∑–Ω–∞–Ω–Ω–æ—Å—Ç–∏');
            if (!player.foundGlitches.includes('rooftop')) {
                player.foundGlitches.push('rooftop');
                player.awareness += 5;
                updateStats();
                checkAwareness();
            } else {
                log('–¢—ã —É–∂–µ —Å–º–æ—Ç—Ä–µ–ª –≤–Ω–∏–∑. –≠—Ç–æ –æ—â—É—â–µ–Ω–∏–µ –∑–Ω–∞–∫–æ–º–æ.');
            }
            break;

        default:
            log('–ù–∏—á–µ–≥–æ –Ω–µ –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç...');
    }
}

